---
title: "Editors"
---


# Choose an editor {.unnumbered}


After you installed Python successfully you need a editor for writing your Python programs. Technical you could use everything where you can write text but it is not really purposeful. 


An editor with **syntax highlighting**, **code completion** and **debugging** is very useful.


### Editors:  {.unnumbered}

 - Spyder [https://www.spyder-ide.org/](https://www.spyder-ide.org/)
 - PyCharm (JetBrains) [https://www.jetbrains.com/products/compare/?product=pycharm&product=pycharm-ce](https://www.jetbrains.com/products/compare/?product=pycharm&product=pycharm-ce)
- Jupyter Notebook [https://jupyter.org/](https://jupyter.org/) [https://code.visualstudio.com/docs/datascience/jupyter-notebooks](https://code.visualstudio.com/docs/datascience/jupyter-notebooks)
- Jupyter Lab [https://jupyter.org/](https://jupyter.org/) [https://code.visualstudio.com/docs/datascience/jupyter-notebooks](https://code.visualstudio.com/docs/datascience/jupyter-notebooks) 
- Google Google Colab [https://colab.research.google.com/](https://colab.research.google.com/)
etc.


:::{.callout-tip}
**Recommendation**: *[Visual Studio Code](https://code.visualstudio.com/download)* 
:::




### Python extension for VS Code:  {.unnumbered}


- Python from Microsoft, 
- Pylance from Microsoft 
- and Jupyter from Microsoft (optional it is only needed if you want to use Jupyter Notebooks in VS Code)


Alternatively you can use a `Jupyter Notebook` (`*.ipynb`) to execute code.

Write the code in a cell and execute it by pressing the run button.

**Advantage of using Jupyter Notebooks**:

- The code can run cell by cell and the output is directly shown below the cell.
- Further you can write text and equations in markdown cells. 
- Jupyter Notebooks can also handle different programming languages like `R`or `Julia`.
- Also `Markdown` and `LaTeX` can be used to write text and equations.
- The output of the code can be visualized directly in the notebook.
- Therefore it is very popular in the data science community.


Jupyter Notebooks can be used in `VS Code`, `Jupyter Lab`, `Jupyter Notebook` or `Google Colab`.


:::{.callout-information}

In this course all exercises are provided as Jupyter Notebooks. 
You can download it or run it directly in Google Colab.

:::



# Using Jupyter Notebooks in VS Code {.unnumbered}

![VS Code](https://github.com/stkroe/PythonforChemists/tree/main/course/images/ipynb-vscode.svg)

## Difference Between Jupyter Notebooks and Python Scripts

- **Interactivity**: Jupyter Notebooks allow you to run code in chunks (cells) and see the output immediately, making them ideal for experimentation and visualization. Python scripts (`.py` files) are typically executed all at once.
- **Documentation**: Notebooks support Markdown cells for adding rich text, equations, and images alongside your code. Python scripts are plain text files and require comments for documentation.
- **Use Case**: Notebooks are great for exploratory data analysis and teaching, while Python scripts are better suited for production code and automation.



# Google Colab Tutorial

Google Colab is a free, cloud-based platform that allows you to run Jupyter Notebooks without any setup. To get started with Google Colab:

:::{.callout-information}
The use of [Google Colab](https://colab.research.google.com) needs a Google Account. Please read the [Terms of Service](https://research.google.com/colaboratory/tos_v5.html) and [Privacy Policy](https://policies.google.com/privacy)
:::

1. Visit [Google Colab](https://colab.research.google.com/) and sign in with your Google account.
2. Create a new notebook or upload an existing `.ipynb` file.
3. Write and execute code in cells, just like in Jupyter Notebooks.
4. Save your work to Google Drive or download it as a `.ipynb` file.

### Key Features of Google Colab

- **Free Access to GPUs/TPUs**: Accelerate your computations by enabling GPU or TPU support from the "Runtime" menu.
- **Collaboration**: Share notebooks with others and work on them simultaneously, similar to Google Docs.
- **Pre-installed Libraries**: Many popular Python libraries are pre-installed, saving you setup time.
- **Integration with Google Drive**: Easily access and save files to your Google Drive.

Upload data on Google Colab:
```{python}
#| eval: false
from google.colab import files
```

# Upload a file
```{python}
#| eval: false
uploaded = files.upload()
```

# Access the uploaded file
```{python}
#| eval: false
for filename in uploaded.keys():
    print(f'User uploaded file "{filename}" with size {len(uploaded[filename])} bytes.')#
```


# Test your chosen setup {.unnumbered}


- open your editor 
- open a new file and save this file as helloworld.py
- write your first test program:

```python
print("Hello World!")
```

- execute your program by using your IDE/Editor 
- or using command line in the terminal (Linux/MacOS) / command prompt under Windows.


```bash
cd /path/to/file
python helloworld.py
```


The ouput should be: "Hello World!".


If you are using Jupyter Notebook you can also write this code in a cell and execute it by pressing the run button.


:::{.callout-tip icon=false}
Congratulations
**You have successfully set up python!!**
:::





