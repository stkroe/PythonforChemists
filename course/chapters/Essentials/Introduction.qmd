---
title: "Introduction"
---


## What do you need for data analysis and visualization? {.unnumbered}


- Research normally contains handling a lot of data.
- Clear presentation of data is essential to the understanding of data.
- It helps to improve your scientific communication and make your results more accessible to others.
- There are many tools available for data analysis and visualization.

A very simple approach would be the use of basic spreadsheet programs with graphical user interfaces *e.g.* 
[Excel](https://www.microsoft.com/de-at/microsoft-365/excel), [LibreOffice Calc](https://de.libreoffice.org/) ...


But for more advanced analysis you need probably specifc plotting and analysis tools: 

- You can either use programs with GUIs *e.g.* [LabPlot](https://labplot.kde.org/), [QtiPlot](https://www.qtiplot.com/), [Scilab](https://www.scilab.org/), [SciDAVis](https://scidavis.sourceforge.net/), [Origin](https://www.originlab.com/) ...
- or a GUI based program with command line interface *e.g.* [Xmgrace](https://plasma-gate.weizmann.ac.il/Grace/),  [GNU Octave](https://octave.org/) ...
- or command line based tools *e.g.* [Gnuplot](http://www.gnuplot.info/), [Matlab](https://de.mathworks.com/products/matlab.html), [Mathematica](https://www.wolfram.com/mathematica/) ...
- or programming languages *e.g.* [Python](https://www.python.org/), [R](https://www.r-project.org/ju), [Julia](https://julialang.org/) ...
 


This is a small election of tools, that can be used for data analysis and plotting.


For a larger list see these wikipedia lists:


- [List of Numerical Analysis Software](https://en.wikipedia.org/wiki/List_of_numerical_analysis_software) 
- [List of Graphical Software](https://en.wikipedia.org/wiki/List_of_information_graphics_software)
- [List of Statistical Software](https://en.wikipedia.org/wiki/List_of_statistical_software)
- [List of Computer Algebra Systems](https://en.wikipedia.org/wiki/List_of_computer_algebra_systems)

---

# Why you should learn Python? {.unnumbered}


- open-source
- well documented with a lot of online resources:
    - [tutorials](https://github.com/ujjwalkarn/DataSciencePython), 
    - [documentations](https://docs.python.org/3/),
    - [stackoverflow](https://stackoverflow.com/questions) ect.
- easy to learn 
- intuitive
- highly flexible
- wide range of applications
- huge number of different python packages are available 
- very easy to adapt to other programming languages such as `R` and `Julia`
- it is not limited to a specific operating system
- you can automate repetitive tasks
- you can create templates for your analysis and visualization tasks
- one of the most popular languages in machine learning and data science

