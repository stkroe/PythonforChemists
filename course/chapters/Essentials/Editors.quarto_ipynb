{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Editors\"\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "# Choose an editor {.unnumbered}\n",
        "\n",
        "\n",
        "After you installed Python successfully you need a editor for writing your Python programs. Technical you could use everything where you can write text but it is not really purposeful. \n",
        "\n",
        "\n",
        "An editor with **syntax highlighting**, **code completion** and **debugging** is very useful.\n",
        "\n",
        "\n",
        "### Editors:  {.unnumbered}\n",
        "\n",
        " - Spyder [https://www.spyder-ide.org/](https://www.spyder-ide.org/)\n",
        " - PyCharm (JetBrains) [https://www.jetbrains.com/products/compare/?product=pycharm&product=pycharm-ce](https://www.jetbrains.com/products/compare/?product=pycharm&product=pycharm-ce)\n",
        "- Jupyter Notebook [https://jupyter.org/](https://jupyter.org/) [https://code.visualstudio.com/docs/datascience/jupyter-notebooks](https://code.visualstudio.com/docs/datascience/jupyter-notebooks)\n",
        "- Jupyter Lab [https://jupyter.org/](https://jupyter.org/) [https://code.visualstudio.com/docs/datascience/jupyter-notebooks](https://code.visualstudio.com/docs/datascience/jupyter-notebooks) \n",
        "- Google Google Colab [https://colab.research.google.com/](https://colab.research.google.com/)\n",
        "etc.\n",
        "\n",
        "\n",
        ":::{.callout-tip}\n",
        "**Recommendation**: *[Visual Studio Code](https://code.visualstudio.com/download)* \n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "### Python extension for VS Code:  {.unnumbered}\n",
        "\n",
        "\n",
        "- Python from Microsoft, \n",
        "- Pylance from Microsoft \n",
        "- and Jupyter from Microsoft (optional it is only needed if you want to use Jupyter Notebooks in VS Code)\n",
        "\n",
        "\n",
        "Alternatively you can use a `Jupyter Notebook` (`*.ipynb`) to execute code.\n",
        "\n",
        "Write the code in a cell and execute it by pressing the run button.\n",
        "\n",
        "**Advantage of using Jupyter Notebooks**:\n",
        "\n",
        "- The code can run cell by cell and the output is directly shown below the cell.\n",
        "- Further you can write text and equations in markdown cells. \n",
        "- Jupyter Notebooks can also handle different programming languages like `R`or `Julia`.\n",
        "- Also `Markdown` and `LaTeX` can be used to write text and equations.\n",
        "- The output of the code can be visualized directly in the notebook.\n",
        "- Therefore it is very popular in the data science community.\n",
        "\n",
        "\n",
        "Jupyter Notebooks can be used in `VS Code`, `Jupyter Lab`, `Jupyter Notebook` or `Google Colab`.\n",
        "\n",
        "\n",
        ":::{.callout-information}\n",
        "\n",
        "In this course all exercises are provided as Jupyter Notebooks. \n",
        "You can download it or run it directly in Google Colab.\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Using Jupyter Notebooks in VS Code {.unnumbered}\n",
        "\n",
        "![VS Code](https://raw.githubusercontent.com/stkroe/PythonForChemists/main/course/images/ipynb-vscode.png)\n",
        "\n",
        "![Python Cell](https://raw.githubusercontent.com/stkroe/PythonForChemists/main/course/images/python.png)\n",
        "\n",
        "### Difference Between Jupyter Notebooks and Python Scripts\n",
        "\n",
        "- **Interactivity**: Jupyter Notebooks allow you to run code in chunks (cells) and see the output immediately, making them ideal for experimentation and visualization. Python scripts (`.py` files) are typically executed all at once.\n",
        "- **Documentation**: Notebooks support Markdown cells for adding rich text, equations, and images alongside your code. Python scripts are plain text files and require comments for documentation.\n",
        "- **Use Case**: Notebooks are great for exploratory data analysis and teaching, while Python scripts are better suited for production code and automation.\n",
        "\n",
        "\n",
        "\n",
        "## Google Colab Tutorial\n",
        "\n",
        "Google Colab is a free, cloud-based platform that allows you to run Jupyter Notebooks without any setup. To get started with Google Colab:\n",
        "\n",
        ":::{.callout-information}\n",
        "The use of [Google Colab](https://colab.research.google.com) needs a Google Account. Please read the [Terms of Service](https://research.google.com/colaboratory/tos_v5.html) and [Privacy Policy](https://policies.google.com/privacy)\n",
        ":::\n",
        "\n",
        "1. Visit [Google Colab](https://colab.research.google.com/) and sign in with your Google account.\n",
        "2. Create a new notebook or upload an existing `.ipynb` file.\n",
        "3. Write and execute code in cells, just like in Jupyter Notebooks.\n",
        "4. Save your work to Google Drive or download it as a `.ipynb` file.\n",
        "\n",
        "### Key Features of Google Colab\n",
        "\n",
        "- **Free Access to GPUs/TPUs**: Accelerate your computations by enabling GPU or TPU support from the \"Runtime\" menu.\n",
        "- **Collaboration**: Share notebooks with others and work on them simultaneously, similar to Google Docs.\n",
        "- **Pre-installed Libraries**: Many popular Python libraries are pre-installed, saving you setup time.\n",
        "- **Integration with Google Drive**: Easily access and save files to your Google Drive.\n",
        "\n",
        "![Google Colab Interface](https://raw.githubusercontent.com/stkroe/PythonForChemists/main/course/images/googlecolab.png)\n",
        "\n",
        "Upload data on Google Colab:"
      ],
      "id": "3915db30"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "from google.colab import files"
      ],
      "id": "9233c802",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Upload a file"
      ],
      "id": "0696ee28"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "uploaded = files.upload()"
      ],
      "id": "dd35c535",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Access the uploaded file"
      ],
      "id": "464b85d2"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| eval: false\n",
        "#| echo: true\n",
        "for filename in uploaded.keys():\n",
        "    print(f'User uploaded file \"{filename}\" with size {len(uploaded[filename])} bytes.')#"
      ],
      "id": "93b758c1",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "### Important Short Cuts in Google Colab\n",
        "- **Run cell and select next cell**: `Shift + Enter`\n",
        "- **Run focused celll**: `⌘/Ctrl + Enter`\n",
        "- **Insert cell below**: `⌘/Ctrl + M B`\n",
        "- **Insert cell above**: `⌘/Ctrl + M A`\n",
        "- **Delete cell**: `⌘/Ctrl + M D`\n",
        "- **Undo last action**: `⌘/Ctrl + M Z`\n",
        "- **Comment/Uncomment line**: `⌘/Ctrl + Alt + M`\n",
        "- **Find and replace**: `⌘/Ctrl + H`\n",
        "- **Show keyboard shortcuts**: `⌘/Ctrl + K H`\n",
        "\n",
        "---\n",
        "\n",
        "# Test your chosen setup {.unnumbered}\n",
        "\n",
        "\n",
        "- open your editor \n",
        "- open a new file and save this file as helloworld.py\n",
        "- write your first test program:\n",
        "\n",
        "```python\n",
        "print(\"Hello World!\")\n",
        "```\n",
        "\n",
        "- execute your program by using your IDE/Editor \n",
        "- or using command line in the terminal (Linux/MacOS) / command prompt under Windows.\n",
        "\n",
        "\n",
        "```bash\n",
        "cd /path/to/file\n",
        "python helloworld.py\n",
        "```\n",
        "\n",
        "\n",
        "The ouput should be: \"Hello World!\".\n",
        "\n",
        "\n",
        "If you are using Jupyter Notebook you can also write this code in a cell and execute it by pressing the run button.\n",
        "\n",
        "\n",
        ":::{.callout-tip icon=false}\n",
        "Congratulations\n",
        "**You have successfully set up python!!**\n",
        ":::\n"
      ],
      "id": "eb2520af"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/stk/y/envs/myenv/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}