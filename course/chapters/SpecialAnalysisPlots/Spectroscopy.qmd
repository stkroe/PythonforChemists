---
title: "Analysis of Spectroscopy Data"
execute: 
  echo: True
  eval: True
code-links:
      - text: "Open in Colab"
        href: "https://colab.research.google.com/github/stkroe/PythonForChemists/blob/main/course/notebooks/Spectroscopy.ipynb"
        icon: "laptop"
      - text: "Download Code"
        href: "https://github.com/stkroe/PythonforChemists/blob/main/course/notebooks/Spectroscopy.ipynb"
        icon: "journal"
--- 
Difficulty level: <span style="color:#2B7492">{{< bi star-fill >}} {{< bi star-fill >}} </span>

##   Spectroscopy Data Analysis {.unnumbered}


Spectroscopy is one of the most used experimental techniques in chemistry *e.g.*:

- UV/Vis spectroscopy
- IR spectroscopy
- NMR spectroscopy
- Mass spectroscopy


The analysis of spectroscopy needs often some preprocessing steps *e.g.*:

- Baseline correction
- Smoothing
- Normalization
- Peak assignment
- Peak fitting
- Peak integration
- Peak deconvolution


### Baseline Correction {.unnumbered}

A baseline correction is often needed to remove background noise from the signal and 

The baseline correction can be done by different methods *e.g.*:

- Polynomial fitting
- Spline fitting
- Minimum value fitting
- Moving average
- Savitzky-Golay filter
- Wavelet transform
- Fourier transform
- etc.

```{python}
import numpy as np
import matplotlib.pyplot as plt
from scipy.signal import savgol_filter
from scipy.optimize import curve_fit
from scipy import stats
from scipy.interpolate import UnivariateSpline
from scipy.ndimage import gaussian_filter1d
from scipy.signal import find_peaks
from scipy.signal import argrelextrema
from scipy.stats import linregress
from scipy.signal import peak_widths
from scipy.signal import peak_prominences
from scipy.signal import peak_widths
from scipy.signal import argrelextrema
from scipy.signal import find_peaks



data = np.random.normal(0, 1, 1000)*np.sin(np.linspace(0, 10, 1000))*np.random.normal(0, 1, 1000)
data = data + np.random.normal(0, 1, 1000)
data = data + np.random.normal(0, 1, 1000)

```
